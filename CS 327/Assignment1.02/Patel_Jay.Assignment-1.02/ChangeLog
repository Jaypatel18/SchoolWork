ChangeLog for Assignment1.02 Due Date: 09/14

Sept 9: I started implementing the assignment, on this day, I did not really made a lot of progress since I didn’t get the idea of the project. After talking few TA’s and what are the expectations for the assignment it really gave me a good basic idea on what and how I should start with. On this day I started working on making a checklist and how I am going to handle this project. On this day I fixed the bug that I had for the previous assignment so that I can get a head start and use my code.

Sept 10: After getting a good idea on this project, I decided to work on the assignment using my own code since I figured what was the mistake I did for the last assignment. On this day I worked on making new struct room inside and made a good progress on making new structs. I learned that I can use size_t in one of this structs. Also I wrote a method called room_all, while working on this method I had a lot of issues and had a hard time using -> syntax but after getting help from a TA I was able to understand the concept and was able to make that method successfully. I also wrote another method called space_mem in this method I wrote it very easily since it was very similar to what I did in the previous method.  

Sept 11: I wrote few more methods on this day, I made a good progress on the assignment, but I ran into an error where I got few syntax and logic errors in order to allocating the memory. After using the debugging tools I figured it out what was wrong with it and after fixing one error, there are few more errors that popped up. After solving one error at a time by walking through the project it ran without any errors or warnings. I also started writing a bit of save and load method and checked the argument parameters that were passed in by the user and were required by the user.

Sept 12: On this day I worked on the hardness for this project since it plays a very important role on your output. For this assignment I used a method called hardnes that method checking for row and column and checking if it is equal to the dot or a hashtag and checking few statements that will be helpful or the flags. I also started writing main while I was writing each function since it was really important for me to check if there were any errors that were generating while I was writing the program. 

Sept 13: On this day I started writing save and load methods, I had a very hard time figuring out the this methods since it was really hard for me to figure it out how to use “big edian” and “small edian” after learning that in class on Tuesday from the professor I got a very good idea on what I am suppose to do for this two methods, since both the methods were very similar to each other with few changes in each method. After writing some lines of code for this program and getting help from the TA I came to know that I have a segmentation fault. It was very hard for me to figure out that issue where as I was also getting some wrong output for this project. After talking to the TA, and using debugger TA told me where exactly my error was and after figuring that out, and compiling it again, I was able to print out the dungeon. 

Sept 14: On this day, I rewrote my save and load method and made it as simpler as possible, After getting a good idea from the lecture and with help from TA, I was successfully be able to compile both save and load method with correct output. On this day I also wrote some comments on my code in order for the TA’s to understand what I did in the method.



ChangeLog for Assignment1.01 Due Date: 09/07

Aug 31: I started writing the program, I read the PDF couple of time and made a checklist on what to do first and what to do in the end that really helped me.

Sept 1: I started implementing the code and made a good progress in generating struct. I also wrote a method called room_generator() in this method I initializing them by using some if else statements and using some % operator in order to get the correct numbers.
 
Sept 3: On this day I implemented 2 methods they were room_print and print_dung, in room_print while I was implementing that I ran into issue was not able to figure it out the algorithm to check if there is anything besides each other. After thinking for a bit and using stack overflow I figured out on how to solve that issue, after attempting few times I finally succeeded in making that work. In the method I am using row as my inner loop and column as my outer loop and adding a dot.
Second method that I wrote was, print_dung; in this method I made a mistake by looping through row first and then column and was getting a wrong output since it should be column first and then row. While making that I also wrote Main and started updating main side by side in order to see what are my outputs and checking if there are any errors in my logic. 

Sept 4: On this day I wrote a method called room_allocation, in this method I am checking if there is anything besides each other and if there is anything then return not true. I did that using if statement. 
I also wrote struct clean_r and clean_dung in this method, I had a very hard time figuring what side to check first and what to compare it with but after understanding it better from a TA I was was able to implement the code by taking help from the TA, I did face some of the syntax and logical errors but after debugging a bit and writing a lot of printf statements I was able to figure it out. 
In clean_dung: I made mistake and allocated different elements in different room and was getting all the wrong output but drawing it out on a piece of paper really helped me out and was able to figure it out. At last, I wrote a main in order to check my work and was printing the correct outputs.

Sept 5 and 6 : I also wrote a method where I tried to make some corridors and didn’t get it successfully, figured the math I was using was wrong and was not able to make the corridors in the correct spot. Some of them were overlapping,after taking help from the TA we figured that my math was wrong after correcting that it was working perfectly fine and we also figured that my x and y were misused and were in a wrong spot.

Sept7: I rewrote my main since i used a lot of print statements to check my work and debug the seg fault I was getting and after using valgrind I was able to figure it out (thank to stack overflow) After that I was tried debug my code and checked if all my cases were working fine as they were suppose to and make sure that there aren’t any logical errors, I also tried making my code look clean and added some comments in order to get TA’s understand my code. 
