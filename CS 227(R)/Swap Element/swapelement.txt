
/**
 * Illustrates that we can use a method to swap two elements
 * of an array, but not to swap the values of two integers.
 * Arguments to methods are always passed by value in Java.
 */
public class SwapElementExample
{
  public static void main(String[] args)
  {
    System.out.println("Array element swap: ");
    int test[] = {2, 4, 6, 8};
    swap(test, 1, 3);
    System.out.println("test[1] = " + test[1]);
    System.out.println("test[3] = " + test[3]);

    System.out.println();
    System.out.println("Try to swap two ints: ");
    int fred = 42;
    int ethyl = 137;
    tryToSwapInts(fred, ethyl);
    System.out.println("fred = " + fred);
    System.out.println("ethyl = " + ethyl);
  }
  
  /**
   * Swaps the array element at index i with the element at index j.
   * The local variable 'arr' is actually a reference to the array
   * created in main.
   * @param arr
   * @param i
   * @param j
   */
  public static void swap(int[] arr, int i, int j)
  {
    int temp = arr[j];
    arr[j] = arr[i];
    arr[i] = temp;
  }
  
  /**
   * This has no effect outside of this method's own
   * local variables, because all we have
   * is the two values that were passed in, not the
   * actual variables used in main.
   * @param x
   * @param y
   */
  public static void tryToSwapInts(int x, int y)
  {
    int temp = y;
    y = x;
    x = temp;
  }
}